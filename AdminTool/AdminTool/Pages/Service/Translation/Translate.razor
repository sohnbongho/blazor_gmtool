@page "/Service/Translation/translate"

@using AdminTool.Services.Translation

@inject ITranslationService TranslationService

@attribute [Authorize]
<CheckedLogin />

<h2 class="text-center my-4">Translation Page</h2>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <!-- 입력 텍스트 필드 -->
            <div class="form-group">
                <label for="sourceText" class="form-label fw-bold">Enter Text to Translate:</label>
                <textarea id="sourceText" @bind="SourceText" class="form-control" rows="4" placeholder="Type text here..."></textarea>
            </div>

            <!-- 대상 언어 선택 -->
            <div class="form-group mt-3">
                <label for="targetLanguage" class="form-label fw-bold">Target Language:</label>
                <select id="targetLanguage" @bind="TargetLanguage" class="form-select">
                    <option value="ko">한국어</option>
                    <option value="en" selected>English</option>
                    <option value="es">Spanish</option>
                    <option value="fr">French</option>
                    <option value="de">German</option>
                </select>
            </div>

            <!-- 번역 버튼 -->
            <div class="d-grid gap-2 mt-4">
                <button @onclick="TranslateText" class="btn btn-primary btn-lg">Translate</button>
            </div>

            <!-- 번역 결과 -->
            @if (!string.IsNullOrEmpty(TranslatedText))
            {
                <div class="mt-4">
                    <h3 class="text-success">Translation Result:</h3>
                    <div class="p-3 border rounded bg-light">
                        <p class="mb-0">@TranslatedText</p>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private string SourceText { get; set; } = string.Empty;
    private string TargetLanguage { get; set; } = "en";
    private string TranslatedText { get; set; } = string.Empty;

    private async Task TranslateText()
    {
        if (string.IsNullOrWhiteSpace(SourceText))
        {
            TranslatedText = "Please enter some text to translate.";
            return;
        }

        try
        {
            var response = await TranslationService.TranslateTextAsync(SourceText, TargetLanguage);
            TranslatedText = response;
        }
        catch (Exception ex)
        {
            TranslatedText = $"Error: {ex.Message}";
        }
    }
}
