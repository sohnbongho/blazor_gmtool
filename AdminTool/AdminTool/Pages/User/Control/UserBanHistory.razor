@page "/User/Control/UserBanHistory"

@using AdminTool.Models
@using AdminTool.Services.User
@using AdminTool.Repositories.User
@using Library.DBTables.MySql
@using Library.DTO
@using Library.Data.Enums
@using Library.Helper

@inject IUserService UserService

@attribute [Authorize]
<CheckedLogin />

<h1>User Search</h1>

<div class="container mt-4">
    <div class="row mb-3">
        <div class="col-md-4">
            <label for="fieldSelect" class="form-label">Search by:</label>
            <select id="fieldSelect" class="form-select" @bind="SelectedField">                
                <option value="userSeq">User Seq</option>                
            </select>
        </div>
        <div class="col-md-4">
            <label for="searchValue" class="form-label">Enter value:</label>
            <input type="text" id="searchValue" class="form-control" @bind="SearchValue" />
        </div>
        <div class="col-md-4 d-flex align-items-end">
            <button class="btn btn-primary" @onclick="SearchUsers">Search</button>
        </div>
    </div>
</div>
@if (FilteredUsers != null && FilteredUsers.Any())
{
    <h3>유저 정보</h3>
    <TableWithPaging TItem="LogBanHistory" Data="@FilteredUsers" RowsPerPage=20
                     VisibleExcelUploadedButton=false />
}
else if (FilteredUsers != null)
{
    <p class="text-warning">No users found.</p>
}





@code {
    private string SelectedField { get; set; } = "userSeq";
    private string SearchValue { get; set; } = string.Empty;
    private List<LogBanHistory>? FilteredUsers { get; set; } = null;    

    private async void SearchUsers()
    {
        if (FilteredUsers == null)
        {
            FilteredUsers = new();
        }

        FilteredUsers.Clear();        

        if (!string.IsNullOrEmpty(SelectedField) && !string.IsNullOrEmpty(SearchValue))
        {
            FilteredUsers = await UserService.FetchUserBanHistoryAsync(SearchValue);
        }
        StateHasChanged();
    }
    
}
